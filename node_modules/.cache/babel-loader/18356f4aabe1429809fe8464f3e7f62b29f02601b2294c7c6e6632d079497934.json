{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABC\\\\Desktop\\\\Chandrapal\\\\src\\\\components\\\\Background3D.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background3D = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const animationIdRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    rendererRef.current = renderer;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create stars\n    const starsGeometry = new THREE.BufferGeometry();\n    const starsCount = 1000;\n    const positions = new Float32Array(starsCount * 3);\n    for (let i = 0; i < starsCount * 3; i += 3) {\n      positions[i] = (Math.random() - 0.5) * 20;\n      positions[i + 1] = (Math.random() - 0.5) * 20;\n      positions[i + 2] = (Math.random() - 0.5) * 20;\n    }\n    starsGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    const starsMaterial = new THREE.PointsMaterial({\n      color: 0xffffff,\n      size: 0.1,\n      transparent: true,\n      opacity: 0.8\n    });\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\n    scene.add(stars);\n\n    // Create floating cubes\n    const cubes = [];\n    for (let i = 0; i < 5; i++) {\n      const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x3b82f6,\n        transparent: true,\n        opacity: 0.3,\n        wireframe: true\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      cube.position.set((Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10);\n      scene.add(cube);\n      cubes.push(cube);\n    }\n\n    // Animation\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      // Rotate stars\n      stars.rotation.y += 0.001;\n\n      // Animate cubes\n      cubes.forEach((cube, index) => {\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n        cube.position.y += Math.sin(Date.now() * 0.001 + index) * 0.001;\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"fixed inset-0 pointer-events-none z-0\",\n    style: {\n      zIndex: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Background3D, \"++w1yV88wcHyn5I/zggwGQruTXs=\");\n_c = Background3D;\nexport default Background3D;\nvar _c;\n$RefreshReg$(_c, \"Background3D\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","Background3D","_s","mountRef","sceneRef","rendererRef","animationIdRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","appendChild","domElement","starsGeometry","BufferGeometry","starsCount","positions","Float32Array","i","Math","random","setAttribute","BufferAttribute","starsMaterial","PointsMaterial","color","size","transparent","opacity","stars","Points","add","cubes","geometry","BoxGeometry","material","MeshBasicMaterial","wireframe","cube","Mesh","set","push","animate","requestAnimationFrame","rotation","y","forEach","index","x","sin","Date","now","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","className","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ABC/Desktop/Chandrapal/src/components/Background3D.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst Background3D: React.FC = () => {\r\n  const mountRef = useRef<HTMLDivElement>(null);\r\n  const sceneRef = useRef<THREE.Scene | null>(null);\r\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\r\n  const animationIdRef = useRef<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!mountRef.current) return;\r\n\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.z = 5;\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      alpha: true, \r\n      antialias: true \r\n    });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x000000, 0);\r\n    rendererRef.current = renderer;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create stars\r\n    const starsGeometry = new THREE.BufferGeometry();\r\n    const starsCount = 1000;\r\n    const positions = new Float32Array(starsCount * 3);\r\n\r\n    for (let i = 0; i < starsCount * 3; i += 3) {\r\n      positions[i] = (Math.random() - 0.5) * 20;\r\n      positions[i + 1] = (Math.random() - 0.5) * 20;\r\n      positions[i + 2] = (Math.random() - 0.5) * 20;\r\n    }\r\n\r\n    starsGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n    const starsMaterial = new THREE.PointsMaterial({\r\n      color: 0xffffff,\r\n      size: 0.1,\r\n      transparent: true,\r\n      opacity: 0.8,\r\n    });\r\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\r\n    scene.add(stars);\r\n\r\n    // Create floating cubes\r\n    const cubes: THREE.Mesh[] = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0x3b82f6,\r\n        transparent: true,\r\n        opacity: 0.3,\r\n        wireframe: true,\r\n      });\r\n      const cube = new THREE.Mesh(geometry, material);\r\n      cube.position.set(\r\n        (Math.random() - 0.5) * 10,\r\n        (Math.random() - 0.5) * 10,\r\n        (Math.random() - 0.5) * 10\r\n      );\r\n      scene.add(cube);\r\n      cubes.push(cube);\r\n    }\r\n\r\n    // Animation\r\n    const animate = () => {\r\n      animationIdRef.current = requestAnimationFrame(animate);\r\n\r\n      // Rotate stars\r\n      stars.rotation.y += 0.001;\r\n\r\n      // Animate cubes\r\n      cubes.forEach((cube, index) => {\r\n        cube.rotation.x += 0.01;\r\n        cube.rotation.y += 0.01;\r\n        cube.position.y += Math.sin(Date.now() * 0.001 + index) * 0.001;\r\n      });\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Handle resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (animationIdRef.current) {\r\n        cancelAnimationFrame(animationIdRef.current);\r\n      }\r\n      if (mountRef.current && renderer.domElement) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      className=\"fixed inset-0 pointer-events-none z-0\"\r\n      style={{ zIndex: 0 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background3D; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}